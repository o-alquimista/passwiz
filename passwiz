#!/bin/bash

#
# PassWiz, a random password generator.
#
# Copyright 2019 Douglas Silva (0x9fd287d56ec107ac)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

OPTS=`getopt -n 'passgen' -o m:s:hv --long method:,size:,help,version -- "$@"`

# If "getopt" exits with an error, echo a message.
if [ $? != 0 ] ; then echo "Failed parsing options. See --help." >&2 ; exit 1 ; fi

# Set default settings.
HELP=false
VERSION=false
SIZE=16
METHOD=urandom

# Retrieves the values passed with the options.
while true; do
  case "$1" in
    -m | --method ) METHOD="$2"; shift 2 ;;
    -s | --size ) SIZE="$2"; shift 2 ;;
    -h | --help ) HELP=true; shift ;;
    -v | --version ) VERSION=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

about="PassWiz, version 0.1"

usage=$(cat << EOF
Usage: passwiz [-m method_name,--method method_name] [-s length,--size length]

Options:
  -m, --method       specify a method for generating random characters
  -s, --size         specify the size of the generated string (use integer)
  -h, --help         print this help, then exit
  -v, --version      print version number, then exit

Methods:
  - urandom (default)
  - gpg

The default size of the resulting string is $SIZE
EOF
)

if [ $HELP == true ]; then
    printf "%s\n" "$usage"

    exit
fi

if [ $VERSION == true ]; then
    echo $about

    exit
fi

if [ $METHOD == "urandom" ]; then
    printf "Your new password: \n\n"

    # "tr" will limit what characters can be used, and "head" will limit the size
    # of the resulting string.
    strings /dev/urandom | tr -dc "[:alnum:][:punct:]" | head -c$SIZE; echo

    exit
elif [ $METHOD == "gpg" ]; then
    printf "Your new password: \n\n"

    gpg --gen-random --armor 2 $SIZE

    exit
else
    echo "Error: Invalid method. See --help"

    exit 1
fi
